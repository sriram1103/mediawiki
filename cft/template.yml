Parameters:
  SSHKey:
    Type: AWS::EC2::KeyPair::KeyName
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  TargetGroupArn:
    Type: String
  AppVersion:
    Type: String
  AppFullVersion:
    Type: String
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
  InstanceProfile:
    Type: String
Resources: 
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName:
        Ref: LaunchConfig
      DesiredCapacity: '1'
      HealthCheckGracePeriod: 900
      MinSize: '1'
      MaxSize: '2'
      TargetGroupARNs: 
        - !Ref TargetGroupArn
      VPCZoneIdentifier: !Ref Subnets 
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'true'
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: 'true'
      
        
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: "ami-0e306788ff2473ccb"
      InstanceType: t2.micro
      KeyName: !Ref SSHKey
      SecurityGroups:
        - !Ref SecurityGroup 
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            yum update -y aws-cfn-bootstrap
            yum install -y git
            git clone https://github.com/sriram1103/tw.git /var/tmp/tw
            cd /var/tmp/tw/scripts
            ./install_app.sh ${AWS::Region} ${AppVersion} ${AppFullVersion} || \
              /opt/aws/bin/cfn-signal -e 1 --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region} && exit 1
            /opt/aws/bin/cfn-signal -e 0 --stack ${AWS::StackName} --resource AutoScalingGroup --region ${AWS::Region}
